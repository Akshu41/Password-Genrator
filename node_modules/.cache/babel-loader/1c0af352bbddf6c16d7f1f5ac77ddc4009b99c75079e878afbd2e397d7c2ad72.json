{"ast":null,"code":"var _jsxFileName = \"/Users/akshay/Desktop/React Game/password/password/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [passLength, setPassLength] = useState(8);\n  const generatePassword = () => {\n    const str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    const number = \"1234567890\";\n    const special = \"!@#$%^&*()_+~\";\n    const allChars = str + number + special;\n    let newPassword = \"\";\n    for (let i = 0; i < passLength; i++) {\n      newPassword += allChars.charAt(Math.floor(Math.random() * allChars.length));\n    }\n    setPassword(newPassword); // Set the new password\n  };\n\n  // Run generatePassword when the component mounts\n  useEffect(() => {\n    generatePassword();\n  }, [passLength]);\n\n  // Function to copy password to clipboard\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(password).then(() => alert(\"Password copied to clipboard!\")).catch(() => alert(\"Failed to copy password.\"));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Password Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        readOnly: true,\n        className: \"password-display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: copyToClipboard,\n        className: \"copy-button\",\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"AOVgOIx1FXpBcSvETcUNhVLyqXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","password","setPassword","passLength","setPassLength","generatePassword","str","number","special","allChars","newPassword","i","charAt","Math","floor","random","length","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/akshay/Desktop/React Game/password/password/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nfunction App() {\n    const [password, setPassword] = useState('');\n    const [passLength, setPassLength] = useState(8);\n    const generatePassword = () => {\n        const str = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n        const number = \"1234567890\";\n        const special = \"!@#$%^&*()_+~\";\n        const allChars = str + number + special;\n        let newPassword = \"\";\n\n        for (let i = 0; i < passLength; i++) {\n            newPassword += allChars.charAt(Math.floor(Math.random() * allChars.length));\n        }\n        \n        setPassword(newPassword); // Set the new password\n    };\n\n    // Run generatePassword when the component mounts\n    useEffect(() => {\n        generatePassword();\n    }, [passLength]);\n\n    // Function to copy password to clipboard\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(password)\n            .then(() => alert(\"Password copied to clipboard!\"))\n            .catch(() => alert(\"Failed to copy password.\"));\n    };\n\n    return (\n        <>\n            <h1 className=\"text-center\">Password Generator</h1>\n            <div>\n                <input type=\"text\" value={password} readOnly className=\"password-display\" />\n                <button onClick={copyToClipboard} className=\"copy-button\">Copy</button>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,GAAG,GAAG,sDAAsD;IAClE,MAAMC,MAAM,GAAG,YAAY;IAC3B,MAAMC,OAAO,GAAG,eAAe;IAC/B,MAAMC,QAAQ,GAAGH,GAAG,GAAGC,MAAM,GAAGC,OAAO;IACvC,IAAIE,WAAW,GAAG,EAAE;IAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,UAAU,EAAEQ,CAAC,EAAE,EAAE;MACjCD,WAAW,IAAID,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAAC;IAC/E;IAEAd,WAAW,CAACQ,WAAW,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACZW,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMc,eAAe,GAAGA,CAAA,KAAM;IAC1BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACnB,QAAQ,CAAC,CAClCoB,IAAI,CAAC,MAAMC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAClDC,KAAK,CAAC,MAAMD,KAAK,CAAC,0BAA0B,CAAC,CAAC;EACvD,CAAC;EAED,oBACI1B,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACI5B,OAAA;MAAI6B,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDjC,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAOkC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE9B,QAAS;QAAC+B,QAAQ;QAACP,SAAS,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5EjC,OAAA;QAAQqC,OAAO,EAAEhB,eAAgB;QAACQ,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA,eACR,CAAC;AAEX;AAAC7B,EAAA,CAtCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}